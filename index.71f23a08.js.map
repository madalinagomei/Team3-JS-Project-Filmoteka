{"mappings":"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","sources":["src/script.js"],"sourcesContent":["// HEADER CAROUSEL------------------------------------------------------------\n\n//import notiflix for pop-ups\n// import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const carouselItems = document.querySelectorAll('.hero-carousel-item');\n  let currentIndex = 0;\n\n  function showNextImage() {\n    carouselItems[currentIndex].style.display = 'none';\n    currentIndex = (currentIndex + 1) % carouselItems.length;\n    carouselItems[currentIndex].style.display = 'block';\n  }\n  setInterval(showNextImage, intervalTime);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const apiKey = '584875d09aec925781121837a2fa3c3b';\n  const apiUrl = 'https://api.themoviedb.org/3';\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  const movieList = document.getElementById('movie-list');\n  const movieDetails = document.getElementById('movie-details');\n  const overlay = document.getElementById('overlay');\n  const searchInput = document.querySelector('.search-form__input');\n  const searchIcon = document.querySelector('.svg-search');\n  const themeSwitch = document.getElementById('theme-switch');\n  const homeLink = document.getElementById('home-link');\n  const libraryLink = document.getElementById('library-link');\n  const mainContent = document.getElementById('main-content');\n  const libraryContent = document.getElementById('library-content');\n  const libraryMovieList = document.getElementById('library-movie-list');\n  const watchedBtn = document.getElementById('watched-btn');\n  const queueBtn = document.getElementById('queue-btn');\n\n  const NUMBEROFITEMSPERREQUEST = 20;\n  const NUMBEROFITEMSPERPAGE = 9;\n\n  let currentLibraryView = 'watched';\n  let currentPage = 1;\n  let totalPages = 20; // Assume 20 pages initially\n\n  // Fetch movies for the homepage\n\n  let genres = {};\n  fetch(`${apiUrl}/genre/movie/list?api_key=${apiKey}&language=en-US`)\n    .then(response => response.json())\n    .then(data => {\n      genres = data.genres.reduce((acc, genre) => {\n        acc[genre.id] = genre.name;\n        return acc;\n      }, {});\n      fetchMovies(currentPage);\n    });\n\n  // Display movies in the main content\n  function displayMovies(movies) {\n    movieList.innerHTML = '';\n\n    movies.forEach(movie => {\n      const movieItem = document.createElement('div');\n      movieItem.classList.add('movie-item', 'photo');\n\n      movieItem.innerHTML = `\n\n  <img src=\"${\n    imgBaseUrl + (movie.poster_path ? movie.poster_path : '/default.jpg')\n  }\" alt=\"${movie.title}\" onerror=\"this.src='./images/fallback-orange.png';\">\n  <div class=\"glow-wrap\">\n    <i class=\"glow\"></i>\n  </div>\n    <h3>${movie.title}</h3>\n  <p>${movie.genre_ids.map(genreId => genres[genreId]).join(', ')} | ${\n        movie.release_date ? movie.release_date.split('-')[0] : 'N/A'\n      } </p>\n  <button class=\"add-to-library\" data-id=\"${\n    movie.id\n  }\" data-type=\"watched\">Add to Watched</button>\n  <button class=\"add-to-library\" data-id=\"${\n    movie.id\n  }\" data-type=\"queue\">Add to Queue</button>`;\n\n      movieItem.querySelectorAll('.add-to-library').forEach(button => {\n        button.addEventListener('click', e => {\n          e.stopPropagation();\n          addToLibrary(movie, button.dataset.type);\n        });\n      });\n      movieItem.addEventListener('click', () => {\n        displayMovieDetails(movie);\n      });\n      movieList.appendChild(movieItem);\n    });\n  }\n\n  //search functionality\n  function searchMovies() {\n    const query = searchInput.value.trim().toLowerCase();\n    if (query.length > 2) {\n      fetch(\n        `${apiUrl}/search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n      )\n        .then(response => response.json())\n        .then(data => {\n          // Filter movies by title or genre\n          const filteredMovies = data.results.filter(movie => {\n            const titleMatch = movie.title.toLowerCase().includes(query);\n            const genreMatch = movie.genre_ids.some(genreId => {\n              const genreName = genres[genreId]\n                ? genres[genreId].toLowerCase()\n                : '';\n              return genreName.includes(query);\n            });\n            return titleMatch || genreMatch;\n          });\n          displayMovies(filteredMovies);\n        });\n    }\n  }\n\n  searchInput.addEventListener('keydown', event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      searchMovies();\n    }\n  });\n\n  searchIcon.addEventListener('click', () => {\n    searchMovies();\n  });\n\n  // Function to fetch movies for a given page\n  function fetchMovies(page) {\n    let needMorePages = false;\n    let completeData = [];\n\n    let actualPage =\n      Math.floor((page * NUMBEROFITEMSPERPAGE) / NUMBEROFITEMSPERREQUEST) + 1;\n    //console.log(\"actual page is \" + actualPage);\n\n    if (\n      page * NUMBEROFITEMSPERPAGE - NUMBEROFITEMSPERREQUEST * (actualPage - 1) <\n      NUMBEROFITEMSPERPAGE\n    ) {\n      needMorePages = true;\n    }\n\n    //console.log(\"actual page afterwards is \" + actualPage);\n\n    fetch(\n      `${apiUrl}/movie/popular?api_key=${apiKey}&language=en-US&page=${actualPage}`\n    )\n      .then(response => response.json())\n      .then(data1 => {\n        if (needMorePages) {\n          completeData = data1.results.slice(\n            ((page - 1) * NUMBEROFITEMSPERPAGE) % NUMBEROFITEMSPERREQUEST,\n            NUMBEROFITEMSPERREQUEST\n          );\n          fetch(\n            `${apiUrl}/movie/popular?api_key=${apiKey}&language=en-US&page=${\n              actualPage + 1\n            }`\n          )\n            .then(response => response.json())\n            .then(data2 => {\n              completeData = completeData.concat(\n                data2.results.slice(\n                  0,\n                  (page * NUMBEROFITEMSPERPAGE) % NUMBEROFITEMSPERREQUEST\n                )\n              );\n              displayMovies(completeData);\n              updatePagination();\n            });\n        } else {\n          displayMovies(\n            data1.results.slice(\n              ((page - 1) * NUMBEROFITEMSPERPAGE) % NUMBEROFITEMSPERREQUEST,\n              (page * NUMBEROFITEMSPERPAGE) % NUMBEROFITEMSPERREQUEST\n            )\n          );\n          updatePagination();\n        }\n      });\n  }\n\n  // Function to update pagination\n  function updatePagination() {\n    const pagination = document.getElementById('pagination');\n    pagination.innerHTML = ''; // Clear previous pagination buttons\n\n    // Create pagination buttons\n    const prevButton = createPaginationButton('«', 'prev');\n    pagination.appendChild(prevButton);\n\n    if (totalPages <= 7) {\n      for (let i = 1; i <= totalPages; i++) {\n        const pageButton = createPaginationButton(i, i);\n        if (i === currentPage) {\n          pageButton.classList.add('active');\n        }\n        pagination.appendChild(pageButton);\n      }\n    } else {\n      // Always show the first page button\n      const firstPageButton = createPaginationButton(1, 1);\n      pagination.appendChild(firstPageButton);\n      if (currentPage === 1) {\n        firstPageButton.classList.add('active');\n      }\n\n      if (currentPage > 4) {\n        const ellipsis = document.createElement('span');\n        ellipsis.textContent = '...';\n        pagination.appendChild(ellipsis);\n      }\n\n      const startPage = Math.max(2, currentPage - 2);\n      const endPage = Math.min(totalPages - 1, currentPage + 2);\n\n      for (let i = startPage; i <= endPage; i++) {\n        const pageButton = createPaginationButton(i, i);\n        if (i === currentPage) {\n          pageButton.classList.add('active');\n        }\n        pagination.appendChild(pageButton);\n      }\n\n      if (currentPage < totalPages - 3) {\n        const ellipsis = document.createElement('span');\n        ellipsis.textContent = '...';\n        pagination.appendChild(ellipsis);\n      }\n\n      // Always show the last page button\n      const lastPageButton = createPaginationButton(totalPages, totalPages);\n      pagination.appendChild(lastPageButton);\n      if (currentPage === totalPages) {\n        lastPageButton.classList.add('active');\n      }\n    }\n\n    const nextButton = createPaginationButton('»', 'next');\n    pagination.appendChild(nextButton);\n  }\n\n  // Function to create pagination button\n  function createPaginationButton(label, page) {\n    const button = document.createElement('button');\n    button.textContent = label;\n    button.setAttribute('data-page', page);\n    button.classList.add('pagination-item');\n    return button;\n  }\n\n  // Event listener for pagination buttons\n  document\n    .getElementById('pagination')\n    .addEventListener('click', function (event) {\n      const target = event.target;\n      if (target.tagName === 'BUTTON') {\n        const page = target.getAttribute('data-page');\n        if (page === 'prev') {\n          if (currentPage > 1) {\n            currentPage--;\n            fetchMovies(currentPage);\n          }\n        } else if (page === 'next') {\n          if (currentPage < totalPages) {\n            currentPage++;\n            fetchMovies(currentPage);\n          }\n        } else {\n          currentPage = parseInt(page);\n          fetchMovies(currentPage);\n        }\n      }\n    });\n\n  // ------------------------------Display movie details------------------------------ //\n  function displayMovieDetails(movie) {\n    let addOrRemoveWatched = 'Add to Watched';\n    let inWatched = false;\n    let addOrRemoveQueue = 'Add to Queue';\n    let inQueue = false;\n\n    let library = JSON.parse(localStorage.getItem('watched')) || [];\n\n    if (!library.some(libMovie => libMovie.id === movie.id)) {\n      //Notiflix.Notify.success(\"Movie not in watched library.\");\n    } else {\n      //Notiflix.Notify.info(\"Movie already in watched library.\");\n      addOrRemoveWatched = 'Remove from Watched';\n      inWatched = true;\n    }\n\n    library = JSON.parse(localStorage.getItem('queue')) || [];\n\n    if (!library.some(libMovie => libMovie.id === movie.id)) {\n      //Notiflix.Notify.success(\"Movie not in queue.\");\n    } else {\n      //Notiflix.Notify.info(\"Movie already in queue.\");\n      addOrRemoveQueue = 'Remove from Queue';\n      inQueue = true;\n    }\n\n    movieDetails.innerHTML = `\n    <div class=\"modal-container\">\n      <img src=\"${imgBaseUrl + movie.poster_path}\" alt=\"${movie.title}\">\n      <div class=\"modal-side-info\">\n      <h2>${movie.title}</h2>\n     \n      <div class=\"list-div\">\n      <ul class=\"left-list\">\n      <li>Vote/ Votes</li>\n      <li>Popularity</li>\n      <li>Original Title</li>\n      <li>Genre</li>\n      </ul>\n      <ul class=\"right-list\">\n      <li><span class=\"vote-average\">${movie.vote_average.toFixed(\n        1\n      )}</span> / ${movie.vote_count}</li>\n      <li>${movie.popularity}</li>\n      <li>${movie.original_title}</li>\n      <li>${movie.genre_ids.map(genreId => genres[genreId]).join(', ')}</li>\n\n      </ul>\n      </div>\n      <div class=\"side-info-about\">\n      <h4>About</h4>\n      <p>${movie.overview}</p>\n      </div>\n\n\n      <div class=\"button-group\">\n        <button class=\"add-to-watched\" data-id=\"${\n          movie.id\n        }\">${addOrRemoveWatched}</button>\n        <button class=\"add-to-queue\" data-id=\"${\n          movie.id\n        }\">${addOrRemoveQueue}</button>\n      </div>\n      </div>\n      \n      </div>\n      `;\n    console.log(movie);\n    movieDetails.classList.remove('hidden');\n    overlay.classList.remove('hidden');\n\n    movieDetails\n      .querySelector('.add-to-watched')\n      .addEventListener('click', () => {\n        if (!inWatched) {\n          addToLibrary(movie, 'watched');\n        } else {\n          removeFromLibrary(movie, 'watched');\n        }\n      });\n\n    movieDetails\n      .querySelector('.add-to-queue')\n      .addEventListener('click', () => {\n        if (!inQueue) {\n          addToLibrary(movie, 'queue');\n        } else {\n          removeFromLibrary(movie, 'queue');\n        }\n      });\n\n    // close modal\n    overlay.addEventListener('click', closeModal);\n  }\n\n  function closeModal() {\n    movieDetails.classList.add('hidden');\n    overlay.classList.add('hidden');\n    overlay.removeEventListener('click', closeModal);\n  }\n\n  // Theme switch functionality\n  themeSwitch.addEventListener('change', () => {\n    document.body.classList.toggle('dark-mode');\n    localStorage.setItem(\n      'dark-mode',\n      document.body.classList.contains('dark-mode')\n    );\n  });\n\n  // Load theme preference\n  if (localStorage.getItem('dark-mode') === 'true') {\n    document.body.classList.add('dark-mode');\n    themeSwitch.checked = true;\n  }\n  // navigation\n  homeLink.addEventListener('click', e => {\n    e.preventDefault();\n    mainContent.classList.remove('hidden');\n    libraryContent.classList.add('hidden');\n  });\n\n  libraryLink.addEventListener('click', e => {\n    e.preventDefault();\n    mainContent.classList.add('hidden');\n    libraryContent.classList.remove('hidden');\n    displayLibrary();\n  });\n\n  watchedBtn.addEventListener('click', () => {\n    currentLibraryView = 'watched';\n    displayLibrary();\n  });\n\n  queueBtn.addEventListener('click', () => {\n    currentLibraryView = 'queue';\n    displayLibrary();\n  });\n\n  // Add to library\n  function addToLibrary(movie, type) {\n    let library = JSON.parse(localStorage.getItem(type)) || [];\n\n    if (!library.some(libMovie => libMovie.id === movie.id)) {\n      library.push(movie);\n      localStorage.setItem(type, JSON.stringify(library));\n      Notiflix.Notify.success(`Successfully added movie to ${type}.`);\n    } else {\n      Notiflix.Notify.info(`Movie already in ${type}.`);\n    }\n    displayMovieDetails(movie);\n    displayLibrary(); // Refresh the library display after adding\n  }\n\n  // Library\n  function displayLibrary() {\n    libraryMovieList.innerHTML = '';\n    const library = JSON.parse(localStorage.getItem(currentLibraryView)) || [];\n\n    if (library.length === 0) {\n      libraryMovieList.innerHTML = `<div class=\"no-movies\"><img src=\"/src/images/no-movies.gif\"></div>`;\n      return;\n    }\n\n    library.forEach(movie => {\n      const movieItem = document.createElement('div');\n      movieItem.classList.add('movie-item', 'photo');\n      movieItem.innerHTML = `\n      <img src=\"${imgBaseUrl + movie.poster_path}\" alt=\"${movie.title}\">\n      <h3>${movie.title}</h3>\n      <p>${movie.genre_ids.map(genreId => genres[genreId]).join(', ')} | ${\n        movie.release_date ? movie.release_date.split('-')[0] : 'N/A'\n      } </p>\n      <button class=\"remove-from-library\" data-id=\"${\n        movie.id\n      }\" data-type=\"${currentLibraryView}\">Remove</button>\n    `;\n\n      movieItem\n        .querySelector('.remove-from-library')\n        .addEventListener('click', e => {\n          e.stopPropagation();\n          removeFromLibrary(movie, currentLibraryView);\n        });\n\n      movieItem.addEventListener('click', () => {\n        displayMovieDetails(movie);\n      });\n      libraryMovieList.appendChild(movieItem);\n    });\n  }\n\n  // remove\n  function removeFromLibrary(movieToRemove, type) {\n    let library = JSON.parse(localStorage.getItem(type)) || [];\n    library = library.filter(movie => movie.id !== movieToRemove.id);\n    localStorage.setItem(type, JSON.stringify(library));\n    Notiflix.Notify.success('Successfully removed movie from library.');\n    // displayMovieDetails(movieToRemove);\n    displayLibrary();\n  }\n});\n\n//btn to top smooth animation\nfunction scrollToTop() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n}\n\n// Show/hide the button based on the scroll position\nwindow.addEventListener('scroll', function () {\n  const scrollToTopBtn = document.getElementById('upward');\n  if (\n    document.documentElement.scrollTop > 300 ||\n    document.body.scrollTop > 300\n  ) {\n    scrollToTopBtn.style.display = 'block';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n});\n\n// -----------------team modal=====================\n\n// ===========team modal 2==\n\n// close modal function\nfunction closeModal() {\n  document.getElementById('myModal').style.display = 'none';\n}\n\n// open modal function\nfunction openModal() {\n  document.getElementById('myModal').style.display = 'block';\n}\n\n// close modal click on x\ndocument.querySelector('.modal .close').addEventListener('click', closeModal);\n\n//close modal on out side click\nwindow.addEventListener('click', function (event) {\n  if (event.target == document.getElementById('myModal')) {\n    closeModal();\n  }\n});\n\n//avent open modal on click footer\ndocument.getElementById('footer-text').addEventListener('click', openModal);\n\n// hide modal\ndocument.addEventListener('DOMContentLoaded', function () {\n  closeModal();\n});\n\n// ++++++++-----------user modal auth+++++++---\n// Open and Close Modal\nconst modal = document.getElementById('auth-modal');\nconst closeButton = document.querySelector('.close-button');\nconst authTabs = document.querySelectorAll('.auth-tab');\nconst authForms = document.querySelectorAll('.auth-form');\n\ndocument.querySelectorAll('.auth-trigger').forEach(button => {\n  button.addEventListener('click', () => {\n    modal.style.display = 'flex';\n  });\n});\n\ncloseButton.addEventListener('click', () => {\n  modal.style.display = 'none';\n});\n\nwindow.addEventListener('click', event => {\n  if (event.target == modal) {\n    modal.style.display = 'none';\n  }\n});\n\nauthTabs.forEach(tab => {\n  tab.addEventListener('click', event => {\n    const target = event.target.getAttribute('data-target');\n\n    authTabs.forEach(t => t.classList.remove('active'));\n    event.target.classList.add('active');\n\n    authForms.forEach(form => {\n      if (form.id === target) {\n        form.classList.add('active');\n      } else {\n        form.classList.remove('active');\n      }\n    });\n  });\n});\n\n// +++++++++++++++---------\n\n// // it's up to you...\n// if (youWant() === true) {\n//   youCan();\n// } else {\n//   youCant();\n// }\n"],"names":["scrollToTop","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","closeModal","getElementById","style","display","openModal","addEventListener","carouselItems","querySelectorAll","currentIndex","setInterval","length","intervalTime","apiKey","apiUrl","imgBaseUrl","movieList","movieDetails","overlay","searchInput","querySelector","searchIcon","themeSwitch","homeLink","libraryLink","mainContent","libraryContent","libraryMovieList","watchedBtn","queueBtn","NUMBEROFITEMSPERREQUEST","currentLibraryView","currentPage","totalPages","genres","displayMovies","movies","innerHTML","forEach","movie","movieItem","createElement","classList","add","concat","poster_path","title","genre_ids","map","genreId","join","release_date","split","id","button","e","stopPropagation","addToLibrary","dataset","type","displayMovieDetails","appendChild","searchMovies","query","value","trim","toLowerCase","fetch","then","response","json","data","results","filter","titleMatch","includes","genreMatch","some","fetchMovies","page","needMorePages","completeData","actualPage","Math","floor","data1","slice","data2","updatePagination","pagination","prevButton","createPaginationButton","firstPageButton","ellipsis","textContent","startPage","max","endPage","min","i1","pageButton1","ellipsis1","lastPageButton","nextButton","label","setAttribute","addOrRemoveWatched","inWatched","addOrRemoveQueue","inQueue","library","JSON","parse","localStorage","getItem","libMovie","vote_average","toFixed","vote_count","popularity","original_title","overview","console","log","remove","removeFromLibrary","closeModal1","removeEventListener","Notiflix","Notify","info","push","setItem","stringify","success","displayLibrary","movieToRemove","reduce","acc","genre","name","event","key","preventDefault","target","tagName","getAttribute","parseInt","toggle","contains","checked","scrollToTopBtn","modal","closeButton","authTabs","authForms","tab","t","form"],"version":3,"file":"index.71f23a08.js.map"}